generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement()) // 사용자 고유 ID
  username   String   @unique // 사용자 이름 (고유)
  phone      String?  @unique // 연락처 (선택, 고유)
  avatar     String? // 프로필 이미지 URL (선택)
  naver_id   String?  @unique // 네이버 계정 고유 ID (선택, 고유)
  kakao_id   String?  @unique // 카카오 계정 고유 ID (선택, 고유)
  created_at DateTime @default(now()) // 생성 시간
  updated_at DateTime @updatedAt // 업데이트 시간

  // Relations
  owner Owner?
  staff Staff?
}

model Owner {
  id               Int               @id @default(autoincrement())
  name             String
  store_name       String
  store_tag        String
  address          String
  detail_address   String?
  phone            String            @unique
  password         String // 초기값: 랜덤 4자리 숫자 비밀번호
  theme_color      String? // 가게 테마 색
  user             User              @relation(fields: [userId], references: [id])
  userId           Int               @unique
  staffAssignments StaffAssignment[] // 해당 가게의 알바생 배정 정보

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Staff {
  id          Int               @id @default(autoincrement())
  user        User              @relation(fields: [userId], references: [id])
  userId      Int               @unique
  name        String // 알바생 이름
  birth_year  Int
  phone       String
  gender      String // "M" 또는 "F"
  assignments StaffAssignment[] // 알바생이 근무하는 여러 가게들

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model StaffAssignment {
  id          Int    @id @default(autoincrement())
  staff       Staff  @relation(fields: [staffId], references: [id])
  staffId     Int
  hourly_wage Float // 시급
  role        String // 직무(직급, 업무)
  status      String @default("pending") // 사장님이 알바생 신청을 수락하거나 거절 (pending, accepted, rejected)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Owner      Owner?   @relation(fields: [ownerId], references: [id])
  ownerId    Int?
}
